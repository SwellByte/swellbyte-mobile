{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sean/Documents/swellByte1-0/SwellByteClient/components/DayForecast.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport moment from 'moment';\nimport Hour from \"./Hour\";\n\nvar DayForecast = function DayForecast(_ref) {\n  var dayData = _ref.dayData,\n      model = _ref.model;\n  var swellDirection = dayData[0];\n  var day = moment(Date.parse(dayData[0].time)).format('ddd');\n  var sixAm = dayData[6];\n  var twelve = dayData[12];\n  var sixPm = dayData[18];\n\n  function getCardinalDirection(angle) {\n    var directions = ['↑', '↗', '→', '↘', '↓', '↙', '←', '↖'];\n    return directions[Math.round(angle / 45) % 8];\n  }\n\n  var hoursArr = [dayData[6], dayData[12], dayData[18]];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      borderBottomWidth: 1,\n      borderBottomColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 18,\n      margin: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, day), hoursArr.map(function (hour) {\n    return React.createElement(Hour, {\n      key: hour.time,\n      hourData: hour,\n      model: model,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    });\n  })));\n};\n\nexport default DayForecast;\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    width: windowWidth - 5,\n    height: 180\n  }\n});","map":{"version":3,"sources":["/Users/sean/Documents/swellByte1-0/SwellByteClient/components/DayForecast.js"],"names":["React","moment","Hour","DayForecast","dayData","model","swellDirection","day","Date","parse","time","format","sixAm","twelve","sixPm","getCardinalDirection","angle","directions","Math","round","hoursArr","styles","container","borderBottomWidth","borderBottomColor","color","fontSize","margin","map","hour","windowWidth","Dimensions","get","width","windowHeight","height","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAwB;AAAA,MAArBC,OAAqB,QAArBA,OAAqB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC1C,MAAMC,cAAc,GAAGF,OAAO,CAAC,CAAD,CAA9B;AACA,MAAMG,GAAG,GAAGN,MAAM,CAACO,IAAI,CAACC,KAAL,CAAWL,OAAO,CAAC,CAAD,CAAP,CAAWM,IAAtB,CAAD,CAAN,CAAoCC,MAApC,CAA2C,KAA3C,CAAZ;AACA,MAAMC,KAAK,GAAGR,OAAO,CAAC,CAAD,CAArB;AACA,MAAMS,MAAM,GAAGT,OAAO,CAAC,EAAD,CAAtB;AACA,MAAMU,KAAK,GAAGV,OAAO,CAAC,EAAD,CAArB;;AAEA,WAASW,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,QAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAnB;AACA,WAAOA,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWH,KAAK,GAAG,EAAnB,IAAyB,CAA1B,CAAjB;AACD;;AAED,MAAMI,QAAQ,GAAG,CAAChB,OAAO,CAAC,CAAD,CAAR,EAAaA,OAAO,CAAC,EAAD,CAApB,EAA0BA,OAAO,CAAC,EAAD,CAAjC,CAAjB;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,iBAAiB,EAAE,CAApB;AAAuBC,MAAAA,iBAAiB,EAAE;AAA1C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,OAAR;AAAiBC,MAAAA,QAAQ,EAAE,EAA3B;AAA+BC,MAAAA,MAAM,EAAE;AAAvC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DpB,GAA3D,CADF,EAGGa,QAAQ,CAACQ,GAAT,CAAa,UAACC,IAAD;AAAA,WAAU,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACnB,IAAhB;AAAsB,MAAA,QAAQ,EAAEmB,IAAhC;AAAsC,MAAA,KAAK,EAAExB,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAAA,GAAb,CAHH,CAFF,CADF;AAWD,CAzBD;;AA2BA,eAAeF,WAAf;AACA,IAAM2B,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AACA,IAAMC,YAAY,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA9C;AACA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,SAAS,EAAE;AAETW,IAAAA,KAAK,EAAEH,WAAW,GAAC,CAFV;AAGTK,IAAAA,MAAM,EAAE;AAHC;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Dimensions, FlatList } from 'react-native'\nimport moment from 'moment'\nimport Hour from './Hour';\n\nconst DayForecast = ({ dayData, model }) => {\n  const swellDirection = dayData[0];\n  const day = moment(Date.parse(dayData[0].time)).format('ddd')\n  const sixAm = dayData[6];\n  const twelve = dayData[12];\n  const sixPm = dayData[18];\n\n  function getCardinalDirection(angle) {\n    const directions = ['↑', '↗', '→', '↘', '↓', '↙', '←', '↖'];\n    return directions[Math.round(angle / 45) % 8];\n  }\n\n  const hoursArr = [dayData[6], dayData[12], dayData[18]]\n\n  return (\n    <View style={styles.container}>\n\n      <View style={{borderBottomWidth: 1, borderBottomColor: 'white'}}>\n        <Text style={{color: 'white', fontSize: 18, margin: 10,}}>{day}</Text>\n\n        {hoursArr.map((hour) => <Hour key={hour.time} hourData={hour} model={model}></Hour>)}\n        </View>\n      \n    </View>\n  )\n}\n\nexport default DayForecast\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\nconst styles = StyleSheet.create({\n  container: {\n    \n    width: windowWidth-5,\n    height: 180,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}