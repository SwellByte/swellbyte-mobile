{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sean/Documents/swellByte1-0/SwellByteClient/components/Hour.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport moment, { normalizeUnits } from 'moment';\n\nvar Hour = function Hour(_ref) {\n  var hourData = _ref.hourData,\n      model = _ref.model;\n  var time = moment(Date.parse(hourData.time) - 7200000).format('h a');\n\n  function getCardinalDirection(angle) {\n    var directions = ['↓', '↙', '←', '↖', '↑', '↗', '→', '↘'];\n    return directions[Math.round(angle / 45) % 8];\n  }\n\n  var windModel;\n\n  if (model === 'meteo') {\n    windModel = 'sg';\n  } else windModel = model;\n\n  var waveDirModel;\n\n  if (hourData.swellDirection[model]) {\n    waveDirModel = model;\n  } else waveDirModel = 'sg';\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, hourData.swellHeight[model] ? React.createElement(View, {\n    style: styles.hourContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.hourCont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.hourT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }, \"\" + time)), React.createElement(View, {\n    style: styles.viewCont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.heightT,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 37\n    }\n  }, hourData.waveHeight.sg.toFixed(1) + \"m\")), React.createElement(View, {\n    style: styles.swellCont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.swellH,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }\n  }, \" \" + hourData.swellHeight[model].toFixed(1) + \"m @\" + Math.round(hourData.swellPeriod[model]) + \"sec   \" + getCardinalDirection(hourData.swellDirection[waveDirModel]))), React.createElement(View, {\n    style: styles.windCont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.swellP,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 37\n    }\n  }, Math.round(hourData.windSpeed[windModel] * 2.236) + \"k/h \" + getCardinalDirection(hourData.windDirection[windModel])))) : null);\n};\n\nexport default Hour;\nvar styles = StyleSheet.create({\n  hourContainer: {\n    flexDirection: 'row',\n    marginVertical: 3,\n    padding: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: 'white'\n  },\n  hourCont: {\n    flex: 1,\n    width: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  viewCont: {\n    flex: 1,\n    width: 70,\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  swellCont: {\n    flex: 1,\n    width: 140,\n    alignItems: 'center'\n  },\n  windCont: {\n    flex: 1,\n    alignItems: 'flex-end',\n    paddingEnd: 10\n  },\n  hourT: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    maxWidth: 70\n  },\n  heightT: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    maxWidth: 70\n  },\n  waveH: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700'\n  },\n  swellH: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    width: 150\n  },\n  swellP: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700'\n  },\n  swellDir: {\n    width: 30,\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700'\n  }\n});","map":{"version":3,"sources":["/Users/sean/Documents/swellByte1-0/SwellByteClient/components/Hour.js"],"names":["React","moment","normalizeUnits","Hour","hourData","model","time","Date","parse","format","getCardinalDirection","angle","directions","Math","round","windModel","waveDirModel","swellDirection","swellHeight","styles","hourContainer","hourCont","hourT","viewCont","heightT","waveHeight","sg","toFixed","swellCont","swellH","swellPeriod","windCont","swellP","windSpeed","windDirection","StyleSheet","create","flexDirection","marginVertical","padding","justifyContent","alignItems","borderTopWidth","borderTopColor","flex","width","paddingEnd","color","fontSize","fontWeight","maxWidth","waveH","swellDir"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport moment, { normalizeUnits } from 'moment'\n\nconst Hour = ({hourData, model}) => {\n  const time = moment(Date.parse(hourData.time)-7200000).format('h a')\n  function getCardinalDirection(angle) {\n    const directions = ['↓', '↙', '←', '↖', '↑', '↗', '→', '↘'];\n    //'↓', '↙', '←', '↖', '↑', '↗', '→', '↘'\n    return directions[Math.round(angle / 45) % 8];\n  }\n  let windModel;\n  if (model === 'meteo') {\n    windModel = 'sg';\n  } else windModel = model;\n  let waveDirModel;\n  if (hourData.swellDirection[model]) {\n    waveDirModel = model\n  } else waveDirModel = 'sg'\n\n\n  return (\n    <View>\n    { \n      hourData.swellHeight[model] ? <View style={styles.hourContainer}>\n      \n      <View style={styles.hourCont}><Text style={styles.hourT}>{`${time}`}</Text></View>\n      <View style={styles.viewCont}><Text style={styles.heightT}>{`${hourData.waveHeight.sg.toFixed(1)}m`}</Text></View>\n      <View style={styles.swellCont}><Text style={styles.swellH}>\n        {` ${hourData.swellHeight[model].toFixed(1)}m @${Math.round(hourData.swellPeriod[model])}sec   ${getCardinalDirection(hourData.swellDirection[waveDirModel])}`}</Text></View>\n      <View style={styles.windCont}><Text style={styles.swellP}>{`${Math.round(hourData.windSpeed[windModel]*2.236)}k/h ${getCardinalDirection(hourData.windDirection[windModel])}`}</Text></View>\n    </View>\n    : null\n\n    }\n    </View>\n  )\n}\n\nexport default Hour\n\nconst styles = StyleSheet.create({\n  hourContainer: {\n    flexDirection: 'row',\n    marginVertical: 3,\n    padding: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: 'white'\n  },\n  hourCont: {\n    flex: 1,\n    width: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  viewCont: {\n    flex: 1,\n    width: 70,\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  swellCont: {\n    flex: 1,\n    width: 140,\n    alignItems: 'center'\n\n  },\n  windCont: {\n    flex: 1,\n    alignItems: 'flex-end',\n    paddingEnd: 10\n\n  },\n  hourT: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    maxWidth: 70\n  \n  },\n  heightT: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    maxWidth: 70\n  \n  },\n  waveH: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    \n  },\n  swellH: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n    width: 150\n\n  },\n  swellP: {\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n\n  },\n  swellDir: {\n    width: 30,\n    color: 'white',\n    padding: 1,\n    fontSize: 17,\n    fontWeight: '700',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}