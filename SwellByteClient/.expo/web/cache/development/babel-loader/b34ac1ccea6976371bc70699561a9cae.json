{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/sean/Documents/swellByte1-0/SwellByteClient/components/SpotDetails.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport DayForecast from \"./DayForecast\";\nimport buoy from \"../images/buoy-icon-28.png\";\nimport RNPickerSelect from 'react-native-picker-select';\n\nvar SpotDetails = function SpotDetails(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var currentTime = new Date().getHours();\n  var image = {\n    uri: 'https://i.imgur.com/clZpR3S.png'\n  };\n  var forecastData = route.params.data;\n  var _forecastData$current = forecastData[currentTime],\n      waveHeight = _forecastData$current.waveHeight,\n      swellHeight = _forecastData$current.swellHeight,\n      swellPeriod = _forecastData$current.swellPeriod,\n      swellDirection = _forecastData$current.swellDirection;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      buoyData = _useState2[0],\n      setBuoy = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState('icon'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedModel = _useState6[0],\n      setModel = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentWindSpeed = _useState8[0],\n      setSpeed = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      currentWindDir = _useState10[0],\n      setWindDir = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      daysArr = _useState12[0],\n      setDays = _useState12[1];\n\n  var _useState13 = useState({\n    currentWaveHeight: '',\n    currentSwellHeight: '',\n    currentSwellPeriod: '',\n    currentSwellDirection: '',\n    currentWindSpeed: '',\n    currentWindDir: ''\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      myState = _useState14[0],\n      setMyState = _useState14[1];\n\n  var buoyFetch = function buoyFetch() {\n    var response, jsonData, nowCastTime;\n    return _regeneratorRuntime.async(function buoyFetch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"http://192.168.1.169:3003/buoy\"));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            jsonData = _context.sent;\n            nowCastTime = forecastData[currentTime];\n            setMyState(_objectSpread({}, nowCastTime));\n\n            if (selectedModel === 'dwd' || selectedModel === 'meteo') {\n              setSpeed(nowCastTime.windSpeed.sg);\n              setWindDir(nowCastTime.windDirection.sg);\n            } else {\n              setWindDir(nowCastTime.windDirection[selectedModel]);\n              setSpeed(nowCastTime.windSpeed[selectedModel]);\n            }\n\n            setDays(dayGenerator(forecastData));\n            setBuoy(jsonData);\n            setTimeout(function () {\n              setIsLoading(false);\n            }, 300);\n            return _context.abrupt(\"return\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var dayGenerator = function dayGenerator(input) {\n    var allData = _toConsumableArray(input);\n\n    var res = [];\n\n    for (var i = 0; i < allData.length / 24; i++) {\n      res.push(allData.splice(0, 24));\n    }\n\n    return res;\n  };\n\n  useEffect(function () {\n    buoyFetch();\n  }, []);\n\n  function getCardinalDirection(angle) {\n    var directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    return directions[Math.round(angle / 45) % 8];\n  }\n\n  return React.createElement(ImageBackground, {\n    source: image,\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, isLoading ? React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }) : React.createElement(SafeAreaView, {\n    style: styles.safeArea,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.currentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.wavesAndWind,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.currentLeft,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25,\n      fontWeight: 'bold',\n      width: 95,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, waveHeight[selectedModel].toFixed(1) + \"m\"), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      fontWeight: 'bold',\n      width: 124,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, swellHeight[selectedModel] + \"m@\" + Math.round(swellPeriod[selectedModel]) + \"sec\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 20,\n      fontWeight: 'bold',\n      width: 35,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }, getCardinalDirection(swellDirection[selectedModel])), React.createElement(Text, {\n    style: {\n      transform: [{\n        rotate: swellDirection[selectedModel] + 90 + \"deg\"\n      }],\n      color: 'white',\n      fontSize: 20,\n      fontWeight: 'bold',\n      width: 20,\n      margin: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, \" \\u2794 \"))), React.createElement(View, {\n    style: styles.currentRight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 25,\n      fontWeight: 'bold',\n      width: 95,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, Math.round(currentWindSpeed * 3.6) + \"km/h\"), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      fontWeight: 'bold',\n      width: 65,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, Math.round(currentWindSpeed * 3.6) + 5 + \"km/h\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 20,\n      fontWeight: 'bold',\n      width: 30,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, getCardinalDirection(currentWindDir - 90)), React.createElement(Text, {\n    style: {\n      transform: [{\n        rotate: currentWindDir + \"deg\"\n      }],\n      color: 'white',\n      fontSize: 20,\n      fontWeight: 'bold',\n      width: 20,\n      margin: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, \" \\u2794 \")))), React.createElement(View, {\n    style: styles.buoyButtonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.buoy,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, React.createElement(Image, {\n    source: buoy,\n    style: {\n      width: 45,\n      height: 45\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: 'white',\n      fontSize: 15,\n      fontWeight: 'bold',\n      width: 124,\n      margin: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, buoyData.height + \"@\" + Math.round(+buoyData.period) + \"sec\")), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, React.createElement(RNPickerSelect, {\n    style: picker,\n    value: selectedModel,\n    onValueChange: function onValueChange(value) {\n      return value == null ? setModel('icon') : setModel(value);\n    },\n    items: [{\n      label: 'icon',\n      value: 'icon'\n    }, {\n      label: 'meteo',\n      value: 'meteo'\n    }, {\n      label: 'noaa',\n      value: 'noaa'\n    }, {\n      label: 'sg',\n      value: 'sg'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  })))), React.createElement(View, {\n    style: styles.flatListCont,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: daysArr,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return item[6].waveHeight[selectedModel] ? React.createElement(DayForecast, {\n        dayData: item,\n        model: selectedModel,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 73\n        }\n      }) : null;\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item[0]._id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default SpotDetails;\nvar windowWidth = Dimensions.get('window').width;\nvar windowHeight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    color: 'white'\n  },\n  safeArea: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white'\n  },\n  currentContainer: {\n    flexDirection: 'column',\n    width: windowWidth - 10,\n    height: windowHeight * .25,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    color: 'white'\n  },\n  wavesAndWind: {\n    flexDirection: 'row',\n    height: 127,\n    width: 367,\n    color: 'white'\n  },\n  currentLeft: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 50,\n    height: 123,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white'\n  },\n  currentRight: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 50,\n    height: 123,\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white'\n  },\n  dayContainer: {\n    flexDirection: 'row',\n    width: windowWidth - 10,\n    height: 160,\n    color: 'white'\n  },\n  buoyButtonView: {\n    flexDirection: 'row',\n    width: 366,\n    height: 60,\n    color: 'white'\n  },\n  buoy: {\n    flexDirection: 'row',\n    flex: 1,\n    height: 55,\n    width: 20,\n    justifyContent: 'center',\n    color: 'white'\n  },\n  button: {\n    flex: 1,\n    height: 55,\n    width: 20,\n    color: 'white'\n  },\n  flatListCont: {\n    marginTop: 5,\n    height: windowHeight * .75\n  }\n});\nvar picker = {\n  inputIOS: {\n    color: 'white',\n    padding: 5,\n    fontSize: 15,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    borderColor: 'white',\n    textAlign: 'center',\n    backgroundColor: 'rgba(0, 208, 159, 0.45)'\n  }\n};","map":{"version":3,"sources":["/Users/sean/Documents/swellByte1-0/SwellByteClient/components/SpotDetails.js"],"names":["React","useState","useEffect","DayForecast","buoy","RNPickerSelect","SpotDetails","route","navigation","currentTime","Date","getHours","image","uri","forecastData","params","data","waveHeight","swellHeight","swellPeriod","swellDirection","buoyData","setBuoy","isLoading","setIsLoading","selectedModel","setModel","currentWindSpeed","setSpeed","currentWindDir","setWindDir","daysArr","setDays","currentWaveHeight","currentSwellHeight","currentSwellPeriod","currentSwellDirection","myState","setMyState","buoyFetch","fetch","response","json","jsonData","nowCastTime","windSpeed","sg","windDirection","dayGenerator","setTimeout","input","allData","res","i","length","push","splice","getCardinalDirection","angle","directions","Math","round","styles","safeArea","currentContainer","wavesAndWind","currentLeft","color","fontSize","fontWeight","width","margin","toFixed","flexDirection","transform","rotate","currentRight","buoyButtonView","height","period","button","picker","value","label","flatListCont","item","_id","windowWidth","Dimensions","get","windowHeight","StyleSheet","create","flex","resizeMode","justifyContent","alignItems","dayContainer","marginTop","inputIOS","padding","borderRadius","borderColor","textAlign","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { TouchableOpacity, StyleSheet, Text, View, SafeAreaView, ImageBackground, Dimensions, Button, Image, FlatList, ScrollView } from 'react-native';\nimport { EXPO_BUOY_DATA } from '@env';\nimport DayForecast from './DayForecast';\nimport buoy from '../images/buoy-icon-28.png'\nimport RNPickerSelect from 'react-native-picker-select';\n\nconst SpotDetails = ({ route, navigation }) => {\n  const currentTime = new Date().getHours();\n  const image = { uri: 'https://i.imgur.com/clZpR3S.png'};\n  const forecastData = route.params.data;\n  const {\n    waveHeight,\n    swellHeight,\n    swellPeriod,\n    swellDirection,\n\n  } = forecastData[currentTime];\n  const [buoyData, setBuoy] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedModel, setModel] = useState('icon');\n  const [currentWindSpeed, setSpeed] = useState('');\n  const [currentWindDir, setWindDir] = useState('');\n  const [daysArr, setDays] = useState([]);\n  \n  const [myState, setMyState] = useState({\n    currentWaveHeight: '',\n    currentSwellHeight: '',\n    currentSwellPeriod: '',\n    currentSwellDirection: '',\n    currentWindSpeed: '',\n    currentWindDir: '',\n  })\n\n  const buoyFetch = async () => {\n    let response = await fetch(EXPO_BUOY_DATA);\n    let jsonData = await response.json();\n    const nowCastTime = forecastData[currentTime];\n    setMyState({...nowCastTime})\n    if (selectedModel === 'dwd' || selectedModel === 'meteo') {\n      setSpeed(nowCastTime.windSpeed.sg);\n      setWindDir(nowCastTime.windDirection.sg);\n    } else {\n      setWindDir(nowCastTime.windDirection[selectedModel]);\n      setSpeed(nowCastTime.windSpeed[selectedModel]);\n    }\n    setDays(dayGenerator(forecastData));    \n    setBuoy(jsonData);\n    setTimeout(() => {\n      setIsLoading(false)\n    }, 300)\n    return\n  }\n \n  const dayGenerator = (input) => {\n    const allData = [...input];\n    const res = [];\n    for (let i = 0; i < allData.length/24; i++) {\n      res.push(allData.splice(0,24))\n    }\n    return res;\n  }\n  \n  useEffect(() => {\n    buoyFetch()\n  }, [])\n\n  function getCardinalDirection(angle) {\n      const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n      return directions[Math.round(angle / 45) % 8];\n    }\n    // console.log(daysArr)\n\n  return (\n    <ImageBackground source={image} style={styles.image}>\n      <SafeAreaView>\n      {isLoading ?\n        <Text></Text> :\n          <SafeAreaView style={styles.safeArea}>\n            \n            <View style={styles.currentContainer}>\n\n              <View style={styles.wavesAndWind}>\n\n\n                <View style={styles.currentLeft}>\n                  <Text style={{color: 'white', fontSize: 25, fontWeight: 'bold', width: 95, margin: 5}}>{`${waveHeight[selectedModel].toFixed(1)}m`}</Text>\n                  <Text style={{color: 'white', fontSize: 15, fontWeight: 'bold', width: 124, margin: 5}}>{`${swellHeight[selectedModel]}m@${Math.round(swellPeriod[selectedModel])}sec`}</Text>\n                  <View style={{flexDirection: 'row'}}>\n                  <Text style={{color: 'white', fontSize: 20, fontWeight: 'bold', width: 35, margin: 5}}>{getCardinalDirection(swellDirection[selectedModel])}</Text>\n                  <Text style={{transform: [{rotate: `${swellDirection[selectedModel]+90}deg`}], color: 'white', fontSize: 20, fontWeight: 'bold', width: 20, margin: 1}} > ➔ </Text>\n                  </View>\n                </View>\n\n                <View style={styles.currentRight}>\n\n                  <Text style={{color: 'white', fontSize: 25, fontWeight: 'bold', width: 95, margin: 5}}>{`${Math.round(currentWindSpeed*3.6)}km/h`}</Text>\n                  <Text style={{color: 'white', fontSize: 15, fontWeight: 'bold', width: 65, margin: 5}}>{`${Math.round(currentWindSpeed*3.6)+5}km/h`}</Text>\n                  <View style={{flexDirection: 'row'}}>\n                  <Text style={{color: 'white', fontSize: 20, fontWeight: 'bold', width: 30, margin: 5}}>{getCardinalDirection(currentWindDir-90)}</Text>\n                  <Text style={{transform: [{rotate: `${currentWindDir }deg`}], color: 'white', fontSize: 20, fontWeight: 'bold', width: 20, margin: 1}} > ➔ </Text>\n                  </View>\n\n                </View>\n              </View >\n\n              <View style={styles.buoyButtonView}>\n                  \n                  <View style={styles.buoy}>\n                    <Image source={buoy} style={{width:45, height:45}} />\n                    <Text style={{color: 'white', fontSize: 15, fontWeight: 'bold', width: 124, margin: 5}}>{`${buoyData.height}@${Math.round(+buoyData.period)}sec`}</Text>\n                  </View>\n\n                  <View style={styles.button}>\n                    <RNPickerSelect style={picker} value={selectedModel}\n                      onValueChange={(value) => value == null ? setModel('icon') : setModel(value)}\n                      items={[\n                          { label: 'icon', value: 'icon' },\n                          { label: 'meteo', value: 'meteo' },\n                          { label: 'noaa', value: 'noaa' },\n                          { label: 'sg', value: 'sg' },\n                      ]}\n                    />\n                  </View>\n\n              </View>\n   \n            </View>\n            <View style={styles.flatListCont}>\n              <FlatList\n              data={daysArr}\n              renderItem={({item}) => item[6].waveHeight[selectedModel]?<DayForecast dayData={item} model={selectedModel}></DayForecast> : null}\n              keyExtractor={item => item[0]._id}\n            />\n            </View>\n              \n            \n             \n\n          </SafeAreaView>\n      }\n      </SafeAreaView>\n    </ImageBackground>\n  )\n}\n\nexport default SpotDetails\nconst windowWidth = Dimensions.get('window').width;\nconst windowHeight = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    color: 'white',  \n  },\n  safeArea: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n\n  },\n  currentContainer: {\n    flexDirection: 'column',\n    width: windowWidth-10,\n    // height: 190,\n    height: windowHeight*.25,\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    color: 'white',\n  },\n  wavesAndWind: {\n    flexDirection: 'row',\n    height: 127,\n    width: 367,\n    \n    color: 'white',\n\n  },\n  currentLeft: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 50,\n    height: 123,\n    justifyContent: 'center',\n    alignItems: 'center',\n    \n    color: 'white',\n    \n\n  },\n  currentRight: {\n    flex: 1,\n    flexDirection: 'column',\n    width: 50,\n    height: 123,\n    justifyContent: 'center',\n    alignItems: 'center',\n    \n    color: 'white',\n\n  },\n  dayContainer: {\n    flexDirection: 'row',\n    width: windowWidth-10,\n    height: 160,\n    \n    color: 'white',\n\n  },\n  buoyButtonView: {\n    flexDirection: 'row',\n    \n    width: 366,\n    height: 60,\n    color: 'white',\n  },\n  buoy: {\n    flexDirection: 'row',\n    flex: 1,\n    \n    height: 55,\n    width: 20,\n    justifyContent: 'center',\n    color: 'white',\n\n  },\n  button: {\n    flex: 1,\n    height: 55,\n    width: 20,\n    color: 'white',\n    \n  },\n  flatListCont: {\n    marginTop: 5,\n    height: windowHeight*.75\n  },\n\n})\n\nconst picker = {\n  inputIOS: {\n    color: 'white',\n    padding: 5,\n    fontSize: 15,\n    fontWeight: 'bold',\n    borderRadius: 10,\n    borderColor: 'white',\n    textAlign: 'center',\n    backgroundColor: 'rgba(0, 208, 159, 0.45)',\n  }\n}"]},"metadata":{},"sourceType":"module"}